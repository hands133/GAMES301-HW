cmake_minimum_required(VERSION 3.18)

# vcpkg配置，必须位于project之前
if (DEFINED ENV{VCPKG_ROOT} AND NOT DEFINED CMAKE_TOOLCHAIN_FILE)
    message(STATUS "VCPKG_ROOT: $ENV{VCPKG_ROOT}")
    set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "")# 设置vcpkg工具链
endif()

message("set VCPKG_ROOT: ${VCPKG_ROOT}")
#set(VCPKG_FEATURE_FLAGS "version") # 用于支持自定义依赖版本

if (DEFINED ENV{VCPKG_TRIPLET} AND NOT DEFINED VCPKG_TARGET_TRIPLET)
    message(STATUS "VCPKG_TRIPLET: $ENV{VCPKG_TRIPLET}")
    set(VCPKG_TARGET_TRIPLET "$ENV{VCPKG_TRIPLET}" CACHE STRING "")
endif()

message("set VCPKG_TARGET_TRIPLET: ${VCPKG_TARGET_TRIPLET}")

project(SurfaceFrameworkCmake LANGUAGES CXX)

#设置不生成MinSizeRel;RelWithDebInfo
set(CMAKE_CONFIGURATION_TYPES "Debug;Release")

if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

add_definitions(/D_USE_MATH_DEFINES)

#QT
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

option(SURFACE_OUT_TO_BIN "Output all target files to build/bin" ON)
option(SURFACE_INSTALL_TARGET "Enable installation targets" OFF)

if (NOT DEFINED CMAKE_POSITION_INDEPENDENT_CODE)
    # Otherwise we can't link .so libs with .a libs
    set(CMAKE_POSITION_INDEPENDENT_CODE ON)
endif()

message(STATUS "Build directory: ${PROJECT_BINARY_DIR}")
message(STATUS "Build type : ${CMAKE_BUILD_TYPE}")

if(SURFACE_OUT_TO_BIN)
    #Otherwise Windows (which doesn't support RPATH) cannot find the DLLs at runtime
    set(SURFACE_OUTPUT_DIR ${PROJECT_BINARY_DIR}/bin)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${SURFACE_OUTPUT_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${SURFACE_OUTPUT_DIR})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${SURFACE_OUTPUT_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${SURFACE_OUTPUT_DIR}/debug)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${SURFACE_OUTPUT_DIR}/debug)
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${SURFACE_OUTPUT_DIR}/debug)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${SURFACE_OUTPUT_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${SURFACE_OUTPUT_DIR})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${SURFACE_OUTPUT_DIR})
endif()

add_subdirectory(src)